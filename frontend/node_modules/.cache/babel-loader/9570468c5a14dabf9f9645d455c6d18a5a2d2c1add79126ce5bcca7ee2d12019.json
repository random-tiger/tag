{"ast":null,"code":"import axios from'axios';// Create axios instance with base configuration\nexport const apiClient=axios.create({baseURL:process.env.REACT_APP_API_BASE_URL||'/api',timeout:120000,// 2 minutes for video operations\nheaders:{'Content-Type':'application/json'}});// Request interceptor for logging and auth\napiClient.interceptors.request.use(config=>{// Add timestamp for request tracking\nconfig.metadata={startTime:new Date()};// Log requests in development\nif(process.env.NODE_ENV==='development'){var _config$method;console.log(\"\\uD83D\\uDE80 API Request: \".concat((_config$method=config.method)===null||_config$method===void 0?void 0:_config$method.toUpperCase(),\" \").concat(config.url));}return config;},error=>{return Promise.reject(error);});// Response interceptor for logging and error handling\napiClient.interceptors.response.use(response=>{// Calculate response time\nconst endTime=new Date();const duration=endTime.getTime()-response.config.metadata.startTime.getTime();// Log responses in development\nif(process.env.NODE_ENV==='development'){var _response$config$meth;console.log(\"\\u2705 API Response: \".concat((_response$config$meth=response.config.method)===null||_response$config$meth===void 0?void 0:_response$config$meth.toUpperCase(),\" \").concat(response.config.url,\" (\").concat(duration,\"ms)\"));}return response;},error=>{var _error$config,_error$config$metadat;// Calculate response time\nif((_error$config=error.config)!==null&&_error$config!==void 0&&(_error$config$metadat=_error$config.metadata)!==null&&_error$config$metadat!==void 0&&_error$config$metadat.startTime){const endTime=new Date();const duration=endTime.getTime()-error.config.metadata.startTime.getTime();if(process.env.NODE_ENV==='development'){var _error$config$method,_error$response;console.error(\"\\u274C API Error: \".concat((_error$config$method=error.config.method)===null||_error$config$method===void 0?void 0:_error$config$method.toUpperCase(),\" \").concat(error.config.url,\" (\").concat(duration,\"ms)\"),((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.data)||error.message);}}// Handle network errors\nif(!error.response){error.message='Network error - please check your connection';}return Promise.reject(error);});// API endpoints\nexport const endpoints={// Health check\nhealth:()=>apiClient.get('/health'),// Stories\ncreateStory:data=>apiClient.post('/stories',data),getStories:function(){let userId=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'anonymous';return apiClient.get(\"/stories?user_id=\".concat(userId));},getStory:storyId=>apiClient.get(\"/stories/\".concat(storyId)),// Video generation\ngenerateVideo:(storyId,formData)=>apiClient.post(\"/stories/\".concat(storyId,\"/generate\"),formData,{headers:{'Content-Type':'multipart/form-data'}}),// Story stitching\nstitchStory:storyId=>apiClient.post(\"/stories/\".concat(storyId,\"/stitch\")),// Operation status\ngetGenerationStatus:operationId=>apiClient.get(\"/generation-status/\".concat(operationId))};export default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","headers","interceptors","request","use","config","metadata","startTime","Date","NODE_ENV","_config$method","console","log","concat","method","toUpperCase","url","error","Promise","reject","response","endTime","duration","getTime","_response$config$meth","_error$config","_error$config$metadat","_error$config$method","_error$response","data","message","endpoints","health","get","createStory","post","getStories","userId","arguments","length","undefined","getStory","storyId","generateVideo","formData","stitchStory","getGenerationStatus","operationId"],"sources":["/Users/bbassett/simple/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nexport const apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || '/api',\n  timeout: 120000, // 2 minutes for video operations\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Request interceptor for logging and auth\napiClient.interceptors.request.use(\n  (config) => {\n    // Add timestamp for request tracking\n    config.metadata = { startTime: new Date() };\n    \n    // Log requests in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for logging and error handling\napiClient.interceptors.response.use(\n  (response) => {\n    // Calculate response time\n    const endTime = new Date();\n    const duration = endTime.getTime() - response.config.metadata.startTime.getTime();\n    \n    // Log responses in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} (${duration}ms)`);\n    }\n    \n    return response;\n  },\n  (error) => {\n    // Calculate response time\n    if (error.config?.metadata?.startTime) {\n      const endTime = new Date();\n      const duration = endTime.getTime() - error.config.metadata.startTime.getTime();\n      \n      if (process.env.NODE_ENV === 'development') {\n        console.error(`❌ API Error: ${error.config.method?.toUpperCase()} ${error.config.url} (${duration}ms)`, error.response?.data || error.message);\n      }\n    }\n    \n    // Handle network errors\n    if (!error.response) {\n      error.message = 'Network error - please check your connection';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const endpoints = {\n  // Health check\n  health: () => apiClient.get('/health'),\n  \n  // Stories\n  createStory: (data) => apiClient.post('/stories', data),\n  getStories: (userId = 'anonymous') => apiClient.get(`/stories?user_id=${userId}`),\n  getStory: (storyId) => apiClient.get(`/stories/${storyId}`),\n  \n  // Video generation\n  generateVideo: (storyId, formData) => apiClient.post(`/stories/${storyId}/generate`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  \n  // Story stitching\n  stitchStory: (storyId) => apiClient.post(`/stories/${storyId}/stitch`),\n  \n  // Operation status\n  getGenerationStatus: (operationId) => apiClient.get(`/generation-status/${operationId}`),\n};\n\nexport default apiClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}