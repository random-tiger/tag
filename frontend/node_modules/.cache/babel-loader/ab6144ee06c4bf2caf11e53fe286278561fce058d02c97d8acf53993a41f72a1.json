{"ast":null,"code":"import axios from 'axios';\n\n// Create axios instance with base configuration\nexport const apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || '/api',\n  timeout: 120000,\n  // 2 minutes for video operations\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging and auth\napiClient.interceptors.request.use(config => {\n  // Add timestamp for request tracking\n  config.metadata = {\n    startTime: new Date()\n  };\n\n  // Log requests in development\n  if (process.env.NODE_ENV === 'development') {\n    var _config$method;\n    console.log(`🚀 API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  }\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for logging and error handling\napiClient.interceptors.response.use(response => {\n  // Calculate response time\n  const endTime = new Date();\n  const duration = endTime.getTime() - response.config.metadata.startTime.getTime();\n\n  // Log responses in development\n  if (process.env.NODE_ENV === 'development') {\n    var _response$config$meth;\n    console.log(`✅ API Response: ${(_response$config$meth = response.config.method) === null || _response$config$meth === void 0 ? void 0 : _response$config$meth.toUpperCase()} ${response.config.url} (${duration}ms)`);\n  }\n  return response;\n}, error => {\n  var _error$config, _error$config$metadat;\n  // Calculate response time\n  if ((_error$config = error.config) !== null && _error$config !== void 0 && (_error$config$metadat = _error$config.metadata) !== null && _error$config$metadat !== void 0 && _error$config$metadat.startTime) {\n    const endTime = new Date();\n    const duration = endTime.getTime() - error.config.metadata.startTime.getTime();\n    if (process.env.NODE_ENV === 'development') {\n      var _error$config$method, _error$response;\n      console.error(`❌ API Error: ${(_error$config$method = error.config.method) === null || _error$config$method === void 0 ? void 0 : _error$config$method.toUpperCase()} ${error.config.url} (${duration}ms)`, ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n    }\n  }\n\n  // Handle network errors\n  if (!error.response) {\n    error.message = 'Network error - please check your connection';\n  }\n  return Promise.reject(error);\n});\n\n// API endpoints\nexport const endpoints = {\n  // Health check\n  health: () => apiClient.get('/health'),\n  // Stories\n  createStory: data => apiClient.post('/stories', data),\n  getStories: (userId = 'anonymous') => apiClient.get(`/stories?user_id=${userId}`),\n  getStory: storyId => apiClient.get(`/stories/${storyId}`),\n  // Video generation\n  generateVideo: (storyId, formData) => apiClient.post(`/stories/${storyId}/generate`, formData, {\n    headers: {\n      'Content-Type': 'multipart/form-data'\n    }\n  }),\n  // Story stitching\n  stitchStory: storyId => apiClient.post(`/stories/${storyId}/stitch`),\n  // Operation status\n  getGenerationStatus: operationId => apiClient.get(`/generation-status/${operationId}`),\n  // Entity Library\n  getEntityLibrary: (userId = 'default_user') => apiClient.get(`/entity-library?user_id=${userId}`),\n  saveEntityToLibrary: entityData => apiClient.post('/entity-library', entityData),\n  deleteEntityFromLibrary: (entityId, userId = 'default_user') => apiClient.delete(`/entity-library/${entityId}?user_id=${userId}`)\n};\nexport default apiClient;","map":{"version":3,"names":["axios","apiClient","create","baseURL","process","env","REACT_APP_API_BASE_URL","timeout","headers","interceptors","request","use","config","metadata","startTime","Date","NODE_ENV","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","endTime","duration","getTime","_response$config$meth","_error$config","_error$config$metadat","_error$config$method","_error$response","data","message","endpoints","health","get","createStory","post","getStories","userId","getStory","storyId","generateVideo","formData","stitchStory","getGenerationStatus","operationId","getEntityLibrary","saveEntityToLibrary","entityData","deleteEntityFromLibrary","entityId","delete"],"sources":["/Users/bbassett/simple/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Create axios instance with base configuration\nexport const apiClient = axios.create({\n  baseURL: process.env.REACT_APP_API_BASE_URL || '/api',\n  timeout: 120000, // 2 minutes for video operations\n  headers: {\n    'Content-Type': 'application/json',\n  }\n});\n\n// Request interceptor for logging and auth\napiClient.interceptors.request.use(\n  (config) => {\n    // Add timestamp for request tracking\n    config.metadata = { startTime: new Date() };\n    \n    // Log requests in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`🚀 API Request: ${config.method?.toUpperCase()} ${config.url}`);\n    }\n    \n    return config;\n  },\n  (error) => {\n    return Promise.reject(error);\n  }\n);\n\n// Response interceptor for logging and error handling\napiClient.interceptors.response.use(\n  (response) => {\n    // Calculate response time\n    const endTime = new Date();\n    const duration = endTime.getTime() - response.config.metadata.startTime.getTime();\n    \n    // Log responses in development\n    if (process.env.NODE_ENV === 'development') {\n      console.log(`✅ API Response: ${response.config.method?.toUpperCase()} ${response.config.url} (${duration}ms)`);\n    }\n    \n    return response;\n  },\n  (error) => {\n    // Calculate response time\n    if (error.config?.metadata?.startTime) {\n      const endTime = new Date();\n      const duration = endTime.getTime() - error.config.metadata.startTime.getTime();\n      \n      if (process.env.NODE_ENV === 'development') {\n        console.error(`❌ API Error: ${error.config.method?.toUpperCase()} ${error.config.url} (${duration}ms)`, error.response?.data || error.message);\n      }\n    }\n    \n    // Handle network errors\n    if (!error.response) {\n      error.message = 'Network error - please check your connection';\n    }\n    \n    return Promise.reject(error);\n  }\n);\n\n// API endpoints\nexport const endpoints = {\n  // Health check\n  health: () => apiClient.get('/health'),\n  \n  // Stories\n  createStory: (data) => apiClient.post('/stories', data),\n  getStories: (userId = 'anonymous') => apiClient.get(`/stories?user_id=${userId}`),\n  getStory: (storyId) => apiClient.get(`/stories/${storyId}`),\n  \n  // Video generation\n  generateVideo: (storyId, formData) => apiClient.post(`/stories/${storyId}/generate`, formData, {\n    headers: { 'Content-Type': 'multipart/form-data' }\n  }),\n  \n  // Story stitching\n  stitchStory: (storyId) => apiClient.post(`/stories/${storyId}/stitch`),\n  \n  // Operation status\n  getGenerationStatus: (operationId) => apiClient.get(`/generation-status/${operationId}`),\n  \n  // Entity Library\n  getEntityLibrary: (userId = 'default_user') => apiClient.get(`/entity-library?user_id=${userId}`),\n  saveEntityToLibrary: (entityData) => apiClient.post('/entity-library', entityData),\n  deleteEntityFromLibrary: (entityId, userId = 'default_user') => \n    apiClient.delete(`/entity-library/${entityId}?user_id=${userId}`),\n};\n\nexport default apiClient;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}